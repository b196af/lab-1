import qiskit
import numpy as np
from qiskit import *
from qiskit.visualization import plot_histogram, plot_bloch_vector , plot_bloch_multivector
from math import sqrt, pi
from qiskit import QuantumCircuit, execute, Aer, assemble
q = QuantumRegister(3)
c = ClassicalRegister(3)
circuit = QuantumCircuit(q,c)
circuit.h(q[0])
circuit.rz(pi/3, q[0])
circuit.x(q[0])
circuit.h(q[1])
circuit.h(q[2])
circuit.cswap(q[2],q[1],q[0])
circuit.h(q[2])
circuit.x(q[2])
circuit.measure(q[2],c[2])
circuit.draw(output = 'mpl')
svmm = Aer.get_backend('aer_simulator')
simulator = Aer.get_backend('statevector_simulator')
job = execute(circuit, simulator)
result = job.result()
statevector = result.get_statevector()
print (statevector)
simulator = Aer.get_backend('statevector_simulator')
job = execute(circuit, simulator, shots = 1024)
result = job.result()
counts = result.get_counts()
plot_histogram(counts)
